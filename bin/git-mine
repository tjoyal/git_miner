#!/usr/bin/env ruby

STDOUT.sync = true

require 'git_miner'


require 'optparse'

options = {
  engine: :ruby,
  dispatch: :parallel,
}

parser = OptionParser.new do |opts|
  opts.banner = "Usage: example.rb [options]"

  opts.on("--engine [ruby|c]", [:ruby, :c], "Set the engine (default: ruby)") do |x|
    options[:engine] = x
  end

  opts.on("--dispatch [simple|parallel]", [:simple, :parallel], "Set the dispatch (default: parallel)") do |x|
    options[:dispatch] = x
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

parser.parse!

unless ARGV.size == 1
  puts parser
  exit 1
end

prefix = ARGV.first

engine = case(options[:engine])
when :ruby
  GitMiner::Engine::RubyEngine
when :c
  GitMiner::Engine::CExtensionEngine
else
  raise ArgumentError, "unexpected engine"
end

dispatch = case(options[:dispatch])
when :simple
  GitMiner::Dispatch::SimpleDispatch
when :parallel
  GitMiner::Dispatch::ParallelDispatch
else
  raise ArgumentError, "unexpected engine"
end

miner = GitMiner::Core.new(
  engine: engine,
  dispatch: dispatch,
  prefix: prefix,
)
miner.validate
miner.mine
miner.report
miner.alter
